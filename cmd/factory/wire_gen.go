// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package factory

import (
	"github.com/ruskotwo/derive-bot/internal/bot"
	"github.com/ruskotwo/derive-bot/internal/config"
	"github.com/ruskotwo/derive-bot/internal/derive"
	"github.com/ruskotwo/derive-bot/internal/domain/journey"
	"github.com/ruskotwo/derive-bot/internal/domain/quest"
	"github.com/ruskotwo/derive-bot/internal/domain/user"
	"github.com/ruskotwo/derive-bot/internal/infrastructure/localization"
	"github.com/ruskotwo/derive-bot/internal/infrastructure/logger"
)

import (
	_ "github.com/go-sql-driver/mysql"
)

// Injectors from wire.go:

func InitTelegramBot() (*bot.TelegramBot, func(), error) {
	telegramBotConfig := config.NewTelegramConfig()
	slogLogger := logger.NewLogger()
	mysqlDatabaseConfig := config.NewMysqlDatabaseConfig()
	db, cleanup, err := NewDB(mysqlDatabaseConfig)
	if err != nil {
		return nil, nil, err
	}
	repository := journey.NewRepository(db)
	questRepository := quest.NewRepository(db)
	deriveDerive := derive.NewDerive(slogLogger, repository, questRepository)
	localize, cleanup2, err := localization.NewLocalize()
	if err != nil {
		cleanup()
		return nil, nil, err
	}
	userRepository := user.NewRepository(db)
	telegramBot := bot.NewTelegramBot(telegramBotConfig, deriveDerive, localize, slogLogger, userRepository)
	return telegramBot, func() {
		cleanup2()
		cleanup()
	}, nil
}
